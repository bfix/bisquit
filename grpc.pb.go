//
// This file is part of Bisq.
//
// Bisq is free software: you can redistribute it and/or modify it
// under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Bisq is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public
// License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with Bisq. If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: grpc.proto

package bisquit

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RegisterDisputeAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisputeAgentType string `protobuf:"bytes,1,opt,name=disputeAgentType,proto3" json:"disputeAgentType,omitempty"`
	RegistrationKey  string `protobuf:"bytes,2,opt,name=registrationKey,proto3" json:"registrationKey,omitempty"`
}

func (x *RegisterDisputeAgentRequest) Reset() {
	*x = RegisterDisputeAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDisputeAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDisputeAgentRequest) ProtoMessage() {}

func (x *RegisterDisputeAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDisputeAgentRequest.ProtoReflect.Descriptor instead.
func (*RegisterDisputeAgentRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterDisputeAgentRequest) GetDisputeAgentType() string {
	if x != nil {
		return x.DisputeAgentType
	}
	return ""
}

func (x *RegisterDisputeAgentRequest) GetRegistrationKey() string {
	if x != nil {
		return x.RegistrationKey
	}
	return ""
}

type RegisterDisputeAgentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RegisterDisputeAgentReply) Reset() {
	*x = RegisterDisputeAgentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterDisputeAgentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterDisputeAgentReply) ProtoMessage() {}

func (x *RegisterDisputeAgentReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterDisputeAgentReply.ProtoReflect.Descriptor instead.
func (*RegisterDisputeAgentReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

type GetMethodHelpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodName string `protobuf:"bytes,1,opt,name=methodName,proto3" json:"methodName,omitempty"`
}

func (x *GetMethodHelpRequest) Reset() {
	*x = GetMethodHelpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMethodHelpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMethodHelpRequest) ProtoMessage() {}

func (x *GetMethodHelpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMethodHelpRequest.ProtoReflect.Descriptor instead.
func (*GetMethodHelpRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *GetMethodHelpRequest) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

type GetMethodHelpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MethodHelp string `protobuf:"bytes,1,opt,name=methodHelp,proto3" json:"methodHelp,omitempty"`
}

func (x *GetMethodHelpReply) Reset() {
	*x = GetMethodHelpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMethodHelpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMethodHelpReply) ProtoMessage() {}

func (x *GetMethodHelpReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMethodHelpReply.ProtoReflect.Descriptor instead.
func (*GetMethodHelpReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *GetMethodHelpReply) GetMethodHelp() string {
	if x != nil {
		return x.MethodHelp
	}
	return ""
}

type GetOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetOfferRequest) Reset() {
	*x = GetOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferRequest) ProtoMessage() {}

func (x *GetOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferRequest.ProtoReflect.Descriptor instead.
func (*GetOfferRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *GetOfferRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetOfferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer *OfferInfo `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *GetOfferReply) Reset() {
	*x = GetOfferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOfferReply) ProtoMessage() {}

func (x *GetOfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOfferReply.ProtoReflect.Descriptor instead.
func (*GetOfferReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *GetOfferReply) GetOffer() *OfferInfo {
	if x != nil {
		return x.Offer
	}
	return nil
}

type GetMyOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMyOfferRequest) Reset() {
	*x = GetMyOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOfferRequest) ProtoMessage() {}

func (x *GetMyOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOfferRequest.ProtoReflect.Descriptor instead.
func (*GetMyOfferRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *GetMyOfferRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMyOfferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer *OfferInfo `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *GetMyOfferReply) Reset() {
	*x = GetMyOfferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOfferReply) ProtoMessage() {}

func (x *GetMyOfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOfferReply.ProtoReflect.Descriptor instead.
func (*GetMyOfferReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *GetMyOfferReply) GetOffer() *OfferInfo {
	if x != nil {
		return x.Offer
	}
	return nil
}

type GetOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    string `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *GetOffersRequest) Reset() {
	*x = GetOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffersRequest) ProtoMessage() {}

func (x *GetOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffersRequest.ProtoReflect.Descriptor instead.
func (*GetOffersRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *GetOffersRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *GetOffersRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetOffersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offers []*OfferInfo `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
}

func (x *GetOffersReply) Reset() {
	*x = GetOffersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOffersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOffersReply) ProtoMessage() {}

func (x *GetOffersReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOffersReply.ProtoReflect.Descriptor instead.
func (*GetOffersReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *GetOffersReply) GetOffers() []*OfferInfo {
	if x != nil {
		return x.Offers
	}
	return nil
}

type GetMyOffersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction    string `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	CurrencyCode string `protobuf:"bytes,2,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *GetMyOffersRequest) Reset() {
	*x = GetMyOffersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOffersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOffersRequest) ProtoMessage() {}

func (x *GetMyOffersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOffersRequest.ProtoReflect.Descriptor instead.
func (*GetMyOffersRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *GetMyOffersRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *GetMyOffersRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetMyOffersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offers []*OfferInfo `protobuf:"bytes,1,rep,name=offers,proto3" json:"offers,omitempty"`
}

func (x *GetMyOffersReply) Reset() {
	*x = GetMyOffersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyOffersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyOffersReply) ProtoMessage() {}

func (x *GetMyOffersReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyOffersReply.ProtoReflect.Descriptor instead.
func (*GetMyOffersReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *GetMyOffersReply) GetOffers() []*OfferInfo {
	if x != nil {
		return x.Offers
	}
	return nil
}

type CreateOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode         string  `protobuf:"bytes,1,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
	Direction            string  `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Price                string  `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	UseMarketBasedPrice  bool    `protobuf:"varint,4,opt,name=useMarketBasedPrice,proto3" json:"useMarketBasedPrice,omitempty"`
	MarketPriceMargin    float64 `protobuf:"fixed64,5,opt,name=marketPriceMargin,proto3" json:"marketPriceMargin,omitempty"`
	Amount               uint64  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	MinAmount            uint64  `protobuf:"varint,7,opt,name=minAmount,proto3" json:"minAmount,omitempty"`
	BuyerSecurityDeposit float64 `protobuf:"fixed64,8,opt,name=buyerSecurityDeposit,proto3" json:"buyerSecurityDeposit,omitempty"`
	TriggerPrice         uint64  `protobuf:"varint,9,opt,name=triggerPrice,proto3" json:"triggerPrice,omitempty"`
	PaymentAccountId     string  `protobuf:"bytes,10,opt,name=paymentAccountId,proto3" json:"paymentAccountId,omitempty"`
	MakerFeeCurrencyCode string  `protobuf:"bytes,11,opt,name=makerFeeCurrencyCode,proto3" json:"makerFeeCurrencyCode,omitempty"`
}

func (x *CreateOfferRequest) Reset() {
	*x = CreateOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferRequest) ProtoMessage() {}

func (x *CreateOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferRequest.ProtoReflect.Descriptor instead.
func (*CreateOfferRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *CreateOfferRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CreateOfferRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *CreateOfferRequest) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CreateOfferRequest) GetUseMarketBasedPrice() bool {
	if x != nil {
		return x.UseMarketBasedPrice
	}
	return false
}

func (x *CreateOfferRequest) GetMarketPriceMargin() float64 {
	if x != nil {
		return x.MarketPriceMargin
	}
	return 0
}

func (x *CreateOfferRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateOfferRequest) GetMinAmount() uint64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *CreateOfferRequest) GetBuyerSecurityDeposit() float64 {
	if x != nil {
		return x.BuyerSecurityDeposit
	}
	return 0
}

func (x *CreateOfferRequest) GetTriggerPrice() uint64 {
	if x != nil {
		return x.TriggerPrice
	}
	return 0
}

func (x *CreateOfferRequest) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

func (x *CreateOfferRequest) GetMakerFeeCurrencyCode() string {
	if x != nil {
		return x.MakerFeeCurrencyCode
	}
	return ""
}

type CreateOfferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer *OfferInfo `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
}

func (x *CreateOfferReply) Reset() {
	*x = CreateOfferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOfferReply) ProtoMessage() {}

func (x *CreateOfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOfferReply.ProtoReflect.Descriptor instead.
func (*CreateOfferReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *CreateOfferReply) GetOffer() *OfferInfo {
	if x != nil {
		return x.Offer
	}
	return nil
}

type CancelOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelOfferRequest) Reset() {
	*x = CancelOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOfferRequest) ProtoMessage() {}

func (x *CancelOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOfferRequest.ProtoReflect.Descriptor instead.
func (*CancelOfferRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *CancelOfferRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CancelOfferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelOfferReply) Reset() {
	*x = CancelOfferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelOfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelOfferReply) ProtoMessage() {}

func (x *CancelOfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelOfferReply.ProtoReflect.Descriptor instead.
func (*CancelOfferReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{15}
}

type OfferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Direction                string  `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Price                    uint64  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	UseMarketBasedPrice      bool    `protobuf:"varint,4,opt,name=useMarketBasedPrice,proto3" json:"useMarketBasedPrice,omitempty"`
	MarketPriceMargin        float64 `protobuf:"fixed64,5,opt,name=marketPriceMargin,proto3" json:"marketPriceMargin,omitempty"`
	Amount                   uint64  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	MinAmount                uint64  `protobuf:"varint,7,opt,name=minAmount,proto3" json:"minAmount,omitempty"`
	Volume                   uint64  `protobuf:"varint,8,opt,name=volume,proto3" json:"volume,omitempty"`
	MinVolume                uint64  `protobuf:"varint,9,opt,name=minVolume,proto3" json:"minVolume,omitempty"`
	BuyerSecurityDeposit     uint64  `protobuf:"varint,10,opt,name=buyerSecurityDeposit,proto3" json:"buyerSecurityDeposit,omitempty"`
	TriggerPrice             uint64  `protobuf:"varint,11,opt,name=triggerPrice,proto3" json:"triggerPrice,omitempty"`
	IsCurrencyForMakerFeeBtc bool    `protobuf:"varint,12,opt,name=isCurrencyForMakerFeeBtc,proto3" json:"isCurrencyForMakerFeeBtc,omitempty"`
	PaymentAccountId         string  `protobuf:"bytes,13,opt,name=paymentAccountId,proto3" json:"paymentAccountId,omitempty"`
	PaymentMethodId          string  `protobuf:"bytes,14,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
	PaymentMethodShortName   string  `protobuf:"bytes,15,opt,name=paymentMethodShortName,proto3" json:"paymentMethodShortName,omitempty"`
	BaseCurrencyCode         string  `protobuf:"bytes,16,opt,name=baseCurrencyCode,proto3" json:"baseCurrencyCode,omitempty"`
	CounterCurrencyCode      string  `protobuf:"bytes,17,opt,name=counterCurrencyCode,proto3" json:"counterCurrencyCode,omitempty"`
	Date                     uint64  `protobuf:"varint,18,opt,name=date,proto3" json:"date,omitempty"`
	State                    string  `protobuf:"bytes,19,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *OfferInfo) Reset() {
	*x = OfferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferInfo) ProtoMessage() {}

func (x *OfferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferInfo.ProtoReflect.Descriptor instead.
func (*OfferInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{16}
}

func (x *OfferInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OfferInfo) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *OfferInfo) GetPrice() uint64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OfferInfo) GetUseMarketBasedPrice() bool {
	if x != nil {
		return x.UseMarketBasedPrice
	}
	return false
}

func (x *OfferInfo) GetMarketPriceMargin() float64 {
	if x != nil {
		return x.MarketPriceMargin
	}
	return 0
}

func (x *OfferInfo) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *OfferInfo) GetMinAmount() uint64 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *OfferInfo) GetVolume() uint64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *OfferInfo) GetMinVolume() uint64 {
	if x != nil {
		return x.MinVolume
	}
	return 0
}

func (x *OfferInfo) GetBuyerSecurityDeposit() uint64 {
	if x != nil {
		return x.BuyerSecurityDeposit
	}
	return 0
}

func (x *OfferInfo) GetTriggerPrice() uint64 {
	if x != nil {
		return x.TriggerPrice
	}
	return 0
}

func (x *OfferInfo) GetIsCurrencyForMakerFeeBtc() bool {
	if x != nil {
		return x.IsCurrencyForMakerFeeBtc
	}
	return false
}

func (x *OfferInfo) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

func (x *OfferInfo) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

func (x *OfferInfo) GetPaymentMethodShortName() string {
	if x != nil {
		return x.PaymentMethodShortName
	}
	return ""
}

func (x *OfferInfo) GetBaseCurrencyCode() string {
	if x != nil {
		return x.BaseCurrencyCode
	}
	return ""
}

func (x *OfferInfo) GetCounterCurrencyCode() string {
	if x != nil {
		return x.CounterCurrencyCode
	}
	return ""
}

func (x *OfferInfo) GetDate() uint64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *OfferInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type CreatePaymentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountForm string `protobuf:"bytes,1,opt,name=paymentAccountForm,proto3" json:"paymentAccountForm,omitempty"`
}

func (x *CreatePaymentAccountRequest) Reset() {
	*x = CreatePaymentAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentAccountRequest) ProtoMessage() {}

func (x *CreatePaymentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentAccountRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentAccountRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{17}
}

func (x *CreatePaymentAccountRequest) GetPaymentAccountForm() string {
	if x != nil {
		return x.PaymentAccountForm
	}
	return ""
}

type CreatePaymentAccountReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccount *PaymentAccount `protobuf:"bytes,1,opt,name=paymentAccount,proto3" json:"paymentAccount,omitempty"`
}

func (x *CreatePaymentAccountReply) Reset() {
	*x = CreatePaymentAccountReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePaymentAccountReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentAccountReply) ProtoMessage() {}

func (x *CreatePaymentAccountReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentAccountReply.ProtoReflect.Descriptor instead.
func (*CreatePaymentAccountReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{18}
}

func (x *CreatePaymentAccountReply) GetPaymentAccount() *PaymentAccount {
	if x != nil {
		return x.PaymentAccount
	}
	return nil
}

type GetPaymentAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPaymentAccountsRequest) Reset() {
	*x = GetPaymentAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountsRequest) ProtoMessage() {}

func (x *GetPaymentAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{19}
}

type GetPaymentAccountsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccounts []*PaymentAccount `protobuf:"bytes,1,rep,name=paymentAccounts,proto3" json:"paymentAccounts,omitempty"`
}

func (x *GetPaymentAccountsReply) Reset() {
	*x = GetPaymentAccountsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentAccountsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountsReply) ProtoMessage() {}

func (x *GetPaymentAccountsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountsReply.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountsReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{20}
}

func (x *GetPaymentAccountsReply) GetPaymentAccounts() []*PaymentAccount {
	if x != nil {
		return x.PaymentAccounts
	}
	return nil
}

type GetPaymentMethodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPaymentMethodsRequest) Reset() {
	*x = GetPaymentMethodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodsRequest) ProtoMessage() {}

func (x *GetPaymentMethodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodsRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{21}
}

type GetPaymentMethodsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethods []*PaymentMethod `protobuf:"bytes,1,rep,name=paymentMethods,proto3" json:"paymentMethods,omitempty"`
}

func (x *GetPaymentMethodsReply) Reset() {
	*x = GetPaymentMethodsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentMethodsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentMethodsReply) ProtoMessage() {}

func (x *GetPaymentMethodsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentMethodsReply.ProtoReflect.Descriptor instead.
func (*GetPaymentMethodsReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{22}
}

func (x *GetPaymentMethodsReply) GetPaymentMethods() []*PaymentMethod {
	if x != nil {
		return x.PaymentMethods
	}
	return nil
}

type GetPaymentAccountFormRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentMethodId string `protobuf:"bytes,1,opt,name=paymentMethodId,proto3" json:"paymentMethodId,omitempty"`
}

func (x *GetPaymentAccountFormRequest) Reset() {
	*x = GetPaymentAccountFormRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentAccountFormRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountFormRequest) ProtoMessage() {}

func (x *GetPaymentAccountFormRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountFormRequest.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountFormRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{23}
}

func (x *GetPaymentAccountFormRequest) GetPaymentMethodId() string {
	if x != nil {
		return x.PaymentMethodId
	}
	return ""
}

type GetPaymentAccountFormReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentAccountFormJson string `protobuf:"bytes,1,opt,name=paymentAccountFormJson,proto3" json:"paymentAccountFormJson,omitempty"`
}

func (x *GetPaymentAccountFormReply) Reset() {
	*x = GetPaymentAccountFormReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentAccountFormReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentAccountFormReply) ProtoMessage() {}

func (x *GetPaymentAccountFormReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentAccountFormReply.ProtoReflect.Descriptor instead.
func (*GetPaymentAccountFormReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{24}
}

func (x *GetPaymentAccountFormReply) GetPaymentAccountFormJson() string {
	if x != nil {
		return x.PaymentAccountFormJson
	}
	return ""
}

type MarketPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *MarketPriceRequest) Reset() {
	*x = MarketPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPriceRequest) ProtoMessage() {}

func (x *MarketPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPriceRequest.ProtoReflect.Descriptor instead.
func (*MarketPriceRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{25}
}

func (x *MarketPriceRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type MarketPriceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *MarketPriceReply) Reset() {
	*x = MarketPriceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketPriceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketPriceReply) ProtoMessage() {}

func (x *MarketPriceReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketPriceReply.ProtoReflect.Descriptor instead.
func (*MarketPriceReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{26}
}

func (x *MarketPriceReply) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type GetTradeStatisticsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTradeStatisticsRequest) Reset() {
	*x = GetTradeStatisticsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeStatisticsRequest) ProtoMessage() {}

func (x *GetTradeStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetTradeStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{27}
}

type GetTradeStatisticsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeStatistics []*TradeStatistics3 `protobuf:"bytes,1,rep,name=TradeStatistics,proto3" json:"TradeStatistics,omitempty"`
}

func (x *GetTradeStatisticsReply) Reset() {
	*x = GetTradeStatisticsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeStatisticsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeStatisticsReply) ProtoMessage() {}

func (x *GetTradeStatisticsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeStatisticsReply.ProtoReflect.Descriptor instead.
func (*GetTradeStatisticsReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{28}
}

func (x *GetTradeStatisticsReply) GetTradeStatistics() []*TradeStatistics3 {
	if x != nil {
		return x.TradeStatistics
	}
	return nil
}

type StopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{29}
}

type StopReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopReply) Reset() {
	*x = StopReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReply) ProtoMessage() {}

func (x *StopReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReply.ProtoReflect.Descriptor instead.
func (*StopReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{30}
}

type TakeOfferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferId              string `protobuf:"bytes,1,opt,name=offerId,proto3" json:"offerId,omitempty"`
	PaymentAccountId     string `protobuf:"bytes,2,opt,name=paymentAccountId,proto3" json:"paymentAccountId,omitempty"`
	TakerFeeCurrencyCode string `protobuf:"bytes,3,opt,name=takerFeeCurrencyCode,proto3" json:"takerFeeCurrencyCode,omitempty"`
}

func (x *TakeOfferRequest) Reset() {
	*x = TakeOfferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeOfferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeOfferRequest) ProtoMessage() {}

func (x *TakeOfferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeOfferRequest.ProtoReflect.Descriptor instead.
func (*TakeOfferRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{31}
}

func (x *TakeOfferRequest) GetOfferId() string {
	if x != nil {
		return x.OfferId
	}
	return ""
}

func (x *TakeOfferRequest) GetPaymentAccountId() string {
	if x != nil {
		return x.PaymentAccountId
	}
	return ""
}

func (x *TakeOfferRequest) GetTakerFeeCurrencyCode() string {
	if x != nil {
		return x.TakerFeeCurrencyCode
	}
	return ""
}

type TakeOfferReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *TradeInfo `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *TakeOfferReply) Reset() {
	*x = TakeOfferReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TakeOfferReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TakeOfferReply) ProtoMessage() {}

func (x *TakeOfferReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TakeOfferReply.ProtoReflect.Descriptor instead.
func (*TakeOfferReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{32}
}

func (x *TakeOfferReply) GetTrade() *TradeInfo {
	if x != nil {
		return x.Trade
	}
	return nil
}

type ConfirmPaymentStartedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *ConfirmPaymentStartedRequest) Reset() {
	*x = ConfirmPaymentStartedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPaymentStartedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPaymentStartedRequest) ProtoMessage() {}

func (x *ConfirmPaymentStartedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPaymentStartedRequest.ProtoReflect.Descriptor instead.
func (*ConfirmPaymentStartedRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{33}
}

func (x *ConfirmPaymentStartedRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type ConfirmPaymentStartedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfirmPaymentStartedReply) Reset() {
	*x = ConfirmPaymentStartedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPaymentStartedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPaymentStartedReply) ProtoMessage() {}

func (x *ConfirmPaymentStartedReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPaymentStartedReply.ProtoReflect.Descriptor instead.
func (*ConfirmPaymentStartedReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{34}
}

type ConfirmPaymentReceivedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *ConfirmPaymentReceivedRequest) Reset() {
	*x = ConfirmPaymentReceivedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPaymentReceivedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPaymentReceivedRequest) ProtoMessage() {}

func (x *ConfirmPaymentReceivedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPaymentReceivedRequest.ProtoReflect.Descriptor instead.
func (*ConfirmPaymentReceivedRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{35}
}

func (x *ConfirmPaymentReceivedRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type ConfirmPaymentReceivedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfirmPaymentReceivedReply) Reset() {
	*x = ConfirmPaymentReceivedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPaymentReceivedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPaymentReceivedReply) ProtoMessage() {}

func (x *ConfirmPaymentReceivedReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPaymentReceivedReply.ProtoReflect.Descriptor instead.
func (*ConfirmPaymentReceivedReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{36}
}

type GetTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *GetTradeRequest) Reset() {
	*x = GetTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeRequest) ProtoMessage() {}

func (x *GetTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeRequest.ProtoReflect.Descriptor instead.
func (*GetTradeRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{37}
}

func (x *GetTradeRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type GetTradeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trade *TradeInfo `protobuf:"bytes,1,opt,name=trade,proto3" json:"trade,omitempty"`
}

func (x *GetTradeReply) Reset() {
	*x = GetTradeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTradeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTradeReply) ProtoMessage() {}

func (x *GetTradeReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTradeReply.ProtoReflect.Descriptor instead.
func (*GetTradeReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{38}
}

func (x *GetTradeReply) GetTrade() *TradeInfo {
	if x != nil {
		return x.Trade
	}
	return nil
}

type KeepFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
}

func (x *KeepFundsRequest) Reset() {
	*x = KeepFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepFundsRequest) ProtoMessage() {}

func (x *KeepFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepFundsRequest.ProtoReflect.Descriptor instead.
func (*KeepFundsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{39}
}

func (x *KeepFundsRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

type KeepFundsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KeepFundsReply) Reset() {
	*x = KeepFundsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepFundsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepFundsReply) ProtoMessage() {}

func (x *KeepFundsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepFundsReply.ProtoReflect.Descriptor instead.
func (*KeepFundsReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{40}
}

type WithdrawFundsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeId string `protobuf:"bytes,1,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Memo    string `protobuf:"bytes,3,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *WithdrawFundsRequest) Reset() {
	*x = WithdrawFundsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFundsRequest) ProtoMessage() {}

func (x *WithdrawFundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFundsRequest.ProtoReflect.Descriptor instead.
func (*WithdrawFundsRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{41}
}

func (x *WithdrawFundsRequest) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *WithdrawFundsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawFundsRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type WithdrawFundsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WithdrawFundsReply) Reset() {
	*x = WithdrawFundsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawFundsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawFundsReply) ProtoMessage() {}

func (x *WithdrawFundsReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawFundsReply.ProtoReflect.Descriptor instead.
func (*WithdrawFundsReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{42}
}

type TradeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offer                    *OfferInfo `protobuf:"bytes,1,opt,name=offer,proto3" json:"offer,omitempty"`
	TradeId                  string     `protobuf:"bytes,2,opt,name=tradeId,proto3" json:"tradeId,omitempty"`
	ShortId                  string     `protobuf:"bytes,3,opt,name=shortId,proto3" json:"shortId,omitempty"`
	Date                     uint64     `protobuf:"varint,4,opt,name=date,proto3" json:"date,omitempty"`
	Role                     string     `protobuf:"bytes,5,opt,name=role,proto3" json:"role,omitempty"`
	IsCurrencyForTakerFeeBtc bool       `protobuf:"varint,6,opt,name=isCurrencyForTakerFeeBtc,proto3" json:"isCurrencyForTakerFeeBtc,omitempty"`
	TxFeeAsLong              uint64     `protobuf:"varint,7,opt,name=txFeeAsLong,proto3" json:"txFeeAsLong,omitempty"`
	TakerFeeAsLong           uint64     `protobuf:"varint,8,opt,name=takerFeeAsLong,proto3" json:"takerFeeAsLong,omitempty"`
	TakerFeeTxId             string     `protobuf:"bytes,9,opt,name=takerFeeTxId,proto3" json:"takerFeeTxId,omitempty"`
	DepositTxId              string     `protobuf:"bytes,10,opt,name=depositTxId,proto3" json:"depositTxId,omitempty"`
	PayoutTxId               string     `protobuf:"bytes,11,opt,name=payoutTxId,proto3" json:"payoutTxId,omitempty"`
	TradeAmountAsLong        uint64     `protobuf:"varint,12,opt,name=tradeAmountAsLong,proto3" json:"tradeAmountAsLong,omitempty"`
	TradePrice               uint64     `protobuf:"varint,13,opt,name=tradePrice,proto3" json:"tradePrice,omitempty"`
	TradingPeerNodeAddress   string     `protobuf:"bytes,14,opt,name=tradingPeerNodeAddress,proto3" json:"tradingPeerNodeAddress,omitempty"`
	State                    string     `protobuf:"bytes,15,opt,name=state,proto3" json:"state,omitempty"`
	Phase                    string     `protobuf:"bytes,16,opt,name=phase,proto3" json:"phase,omitempty"`
	TradePeriodState         string     `protobuf:"bytes,17,opt,name=tradePeriodState,proto3" json:"tradePeriodState,omitempty"`
	IsDepositPublished       bool       `protobuf:"varint,18,opt,name=isDepositPublished,proto3" json:"isDepositPublished,omitempty"`
	IsDepositConfirmed       bool       `protobuf:"varint,19,opt,name=isDepositConfirmed,proto3" json:"isDepositConfirmed,omitempty"`
	IsFiatSent               bool       `protobuf:"varint,20,opt,name=isFiatSent,proto3" json:"isFiatSent,omitempty"`
	IsFiatReceived           bool       `protobuf:"varint,21,opt,name=isFiatReceived,proto3" json:"isFiatReceived,omitempty"`
	IsPayoutPublished        bool       `protobuf:"varint,22,opt,name=isPayoutPublished,proto3" json:"isPayoutPublished,omitempty"`
	IsWithdrawn              bool       `protobuf:"varint,23,opt,name=isWithdrawn,proto3" json:"isWithdrawn,omitempty"`
	ContractAsJson           string     `protobuf:"bytes,24,opt,name=contractAsJson,proto3" json:"contractAsJson,omitempty"`
}

func (x *TradeInfo) Reset() {
	*x = TradeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeInfo) ProtoMessage() {}

func (x *TradeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeInfo.ProtoReflect.Descriptor instead.
func (*TradeInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{43}
}

func (x *TradeInfo) GetOffer() *OfferInfo {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *TradeInfo) GetTradeId() string {
	if x != nil {
		return x.TradeId
	}
	return ""
}

func (x *TradeInfo) GetShortId() string {
	if x != nil {
		return x.ShortId
	}
	return ""
}

func (x *TradeInfo) GetDate() uint64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *TradeInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *TradeInfo) GetIsCurrencyForTakerFeeBtc() bool {
	if x != nil {
		return x.IsCurrencyForTakerFeeBtc
	}
	return false
}

func (x *TradeInfo) GetTxFeeAsLong() uint64 {
	if x != nil {
		return x.TxFeeAsLong
	}
	return 0
}

func (x *TradeInfo) GetTakerFeeAsLong() uint64 {
	if x != nil {
		return x.TakerFeeAsLong
	}
	return 0
}

func (x *TradeInfo) GetTakerFeeTxId() string {
	if x != nil {
		return x.TakerFeeTxId
	}
	return ""
}

func (x *TradeInfo) GetDepositTxId() string {
	if x != nil {
		return x.DepositTxId
	}
	return ""
}

func (x *TradeInfo) GetPayoutTxId() string {
	if x != nil {
		return x.PayoutTxId
	}
	return ""
}

func (x *TradeInfo) GetTradeAmountAsLong() uint64 {
	if x != nil {
		return x.TradeAmountAsLong
	}
	return 0
}

func (x *TradeInfo) GetTradePrice() uint64 {
	if x != nil {
		return x.TradePrice
	}
	return 0
}

func (x *TradeInfo) GetTradingPeerNodeAddress() string {
	if x != nil {
		return x.TradingPeerNodeAddress
	}
	return ""
}

func (x *TradeInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *TradeInfo) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

func (x *TradeInfo) GetTradePeriodState() string {
	if x != nil {
		return x.TradePeriodState
	}
	return ""
}

func (x *TradeInfo) GetIsDepositPublished() bool {
	if x != nil {
		return x.IsDepositPublished
	}
	return false
}

func (x *TradeInfo) GetIsDepositConfirmed() bool {
	if x != nil {
		return x.IsDepositConfirmed
	}
	return false
}

func (x *TradeInfo) GetIsFiatSent() bool {
	if x != nil {
		return x.IsFiatSent
	}
	return false
}

func (x *TradeInfo) GetIsFiatReceived() bool {
	if x != nil {
		return x.IsFiatReceived
	}
	return false
}

func (x *TradeInfo) GetIsPayoutPublished() bool {
	if x != nil {
		return x.IsPayoutPublished
	}
	return false
}

func (x *TradeInfo) GetIsWithdrawn() bool {
	if x != nil {
		return x.IsWithdrawn
	}
	return false
}

func (x *TradeInfo) GetContractAsJson() string {
	if x != nil {
		return x.ContractAsJson
	}
	return ""
}

type TxFeeRateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseCustomTxFeeRate      bool   `protobuf:"varint,1,opt,name=useCustomTxFeeRate,proto3" json:"useCustomTxFeeRate,omitempty"`
	CustomTxFeeRate         uint64 `protobuf:"varint,2,opt,name=customTxFeeRate,proto3" json:"customTxFeeRate,omitempty"`
	FeeServiceRate          uint64 `protobuf:"varint,3,opt,name=feeServiceRate,proto3" json:"feeServiceRate,omitempty"`
	LastFeeServiceRequestTs uint64 `protobuf:"varint,4,opt,name=lastFeeServiceRequestTs,proto3" json:"lastFeeServiceRequestTs,omitempty"`
}

func (x *TxFeeRateInfo) Reset() {
	*x = TxFeeRateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxFeeRateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxFeeRateInfo) ProtoMessage() {}

func (x *TxFeeRateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxFeeRateInfo.ProtoReflect.Descriptor instead.
func (*TxFeeRateInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{44}
}

func (x *TxFeeRateInfo) GetUseCustomTxFeeRate() bool {
	if x != nil {
		return x.UseCustomTxFeeRate
	}
	return false
}

func (x *TxFeeRateInfo) GetCustomTxFeeRate() uint64 {
	if x != nil {
		return x.CustomTxFeeRate
	}
	return 0
}

func (x *TxFeeRateInfo) GetFeeServiceRate() uint64 {
	if x != nil {
		return x.FeeServiceRate
	}
	return 0
}

func (x *TxFeeRateInfo) GetLastFeeServiceRequestTs() uint64 {
	if x != nil {
		return x.LastFeeServiceRequestTs
	}
	return 0
}

type TxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId      string `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
	InputSum  uint64 `protobuf:"varint,2,opt,name=inputSum,proto3" json:"inputSum,omitempty"`
	OutputSum uint64 `protobuf:"varint,3,opt,name=outputSum,proto3" json:"outputSum,omitempty"`
	Fee       uint64 `protobuf:"varint,4,opt,name=fee,proto3" json:"fee,omitempty"`
	Size      int32  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	IsPending bool   `protobuf:"varint,6,opt,name=isPending,proto3" json:"isPending,omitempty"`
	Memo      string `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *TxInfo) Reset() {
	*x = TxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInfo) ProtoMessage() {}

func (x *TxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInfo.ProtoReflect.Descriptor instead.
func (*TxInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{45}
}

func (x *TxInfo) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *TxInfo) GetInputSum() uint64 {
	if x != nil {
		return x.InputSum
	}
	return 0
}

func (x *TxInfo) GetOutputSum() uint64 {
	if x != nil {
		return x.OutputSum
	}
	return 0
}

func (x *TxInfo) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *TxInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TxInfo) GetIsPending() bool {
	if x != nil {
		return x.IsPending
	}
	return false
}

func (x *TxInfo) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type GetBalancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode string `protobuf:"bytes,1,opt,name=currencyCode,proto3" json:"currencyCode,omitempty"`
}

func (x *GetBalancesRequest) Reset() {
	*x = GetBalancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalancesRequest) ProtoMessage() {}

func (x *GetBalancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalancesRequest.ProtoReflect.Descriptor instead.
func (*GetBalancesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{46}
}

func (x *GetBalancesRequest) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

type GetBalancesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balances *BalancesInfo `protobuf:"bytes,1,opt,name=balances,proto3" json:"balances,omitempty"`
}

func (x *GetBalancesReply) Reset() {
	*x = GetBalancesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBalancesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBalancesReply) ProtoMessage() {}

func (x *GetBalancesReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBalancesReply.ProtoReflect.Descriptor instead.
func (*GetBalancesReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{47}
}

func (x *GetBalancesReply) GetBalances() *BalancesInfo {
	if x != nil {
		return x.Balances
	}
	return nil
}

type GetAddressBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetAddressBalanceRequest) Reset() {
	*x = GetAddressBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressBalanceRequest) ProtoMessage() {}

func (x *GetAddressBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetAddressBalanceRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{48}
}

func (x *GetAddressBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetAddressBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressBalanceInfo *AddressBalanceInfo `protobuf:"bytes,1,opt,name=addressBalanceInfo,proto3" json:"addressBalanceInfo,omitempty"`
}

func (x *GetAddressBalanceReply) Reset() {
	*x = GetAddressBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAddressBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAddressBalanceReply) ProtoMessage() {}

func (x *GetAddressBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAddressBalanceReply.ProtoReflect.Descriptor instead.
func (*GetAddressBalanceReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{49}
}

func (x *GetAddressBalanceReply) GetAddressBalanceInfo() *AddressBalanceInfo {
	if x != nil {
		return x.AddressBalanceInfo
	}
	return nil
}

type GetUnusedBsqAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUnusedBsqAddressRequest) Reset() {
	*x = GetUnusedBsqAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnusedBsqAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnusedBsqAddressRequest) ProtoMessage() {}

func (x *GetUnusedBsqAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnusedBsqAddressRequest.ProtoReflect.Descriptor instead.
func (*GetUnusedBsqAddressRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{50}
}

type GetUnusedBsqAddressReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetUnusedBsqAddressReply) Reset() {
	*x = GetUnusedBsqAddressReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUnusedBsqAddressReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnusedBsqAddressReply) ProtoMessage() {}

func (x *GetUnusedBsqAddressReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnusedBsqAddressReply.ProtoReflect.Descriptor instead.
func (*GetUnusedBsqAddressReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{51}
}

func (x *GetUnusedBsqAddressReply) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type SendBsqRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TxFeeRate string `protobuf:"bytes,3,opt,name=txFeeRate,proto3" json:"txFeeRate,omitempty"`
}

func (x *SendBsqRequest) Reset() {
	*x = SendBsqRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBsqRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBsqRequest) ProtoMessage() {}

func (x *SendBsqRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBsqRequest.ProtoReflect.Descriptor instead.
func (*SendBsqRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{52}
}

func (x *SendBsqRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SendBsqRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SendBsqRequest) GetTxFeeRate() string {
	if x != nil {
		return x.TxFeeRate
	}
	return ""
}

type SendBsqReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInfo *TxInfo `protobuf:"bytes,1,opt,name=txInfo,proto3" json:"txInfo,omitempty"`
}

func (x *SendBsqReply) Reset() {
	*x = SendBsqReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBsqReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBsqReply) ProtoMessage() {}

func (x *SendBsqReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBsqReply.ProtoReflect.Descriptor instead.
func (*SendBsqReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{53}
}

func (x *SendBsqReply) GetTxInfo() *TxInfo {
	if x != nil {
		return x.TxInfo
	}
	return nil
}

type SendBtcRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	TxFeeRate string `protobuf:"bytes,3,opt,name=txFeeRate,proto3" json:"txFeeRate,omitempty"`
	Memo      string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
}

func (x *SendBtcRequest) Reset() {
	*x = SendBtcRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBtcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBtcRequest) ProtoMessage() {}

func (x *SendBtcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBtcRequest.ProtoReflect.Descriptor instead.
func (*SendBtcRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{54}
}

func (x *SendBtcRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *SendBtcRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SendBtcRequest) GetTxFeeRate() string {
	if x != nil {
		return x.TxFeeRate
	}
	return ""
}

func (x *SendBtcRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type SendBtcReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInfo *TxInfo `protobuf:"bytes,1,opt,name=txInfo,proto3" json:"txInfo,omitempty"`
}

func (x *SendBtcReply) Reset() {
	*x = SendBtcReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBtcReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBtcReply) ProtoMessage() {}

func (x *SendBtcReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBtcReply.ProtoReflect.Descriptor instead.
func (*SendBtcReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{55}
}

func (x *SendBtcReply) GetTxInfo() *TxInfo {
	if x != nil {
		return x.TxInfo
	}
	return nil
}

type GetTxFeeRateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTxFeeRateRequest) Reset() {
	*x = GetTxFeeRateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxFeeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxFeeRateRequest) ProtoMessage() {}

func (x *GetTxFeeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxFeeRateRequest.ProtoReflect.Descriptor instead.
func (*GetTxFeeRateRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{56}
}

type GetTxFeeRateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxFeeRateInfo *TxFeeRateInfo `protobuf:"bytes,1,opt,name=txFeeRateInfo,proto3" json:"txFeeRateInfo,omitempty"`
}

func (x *GetTxFeeRateReply) Reset() {
	*x = GetTxFeeRateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxFeeRateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxFeeRateReply) ProtoMessage() {}

func (x *GetTxFeeRateReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxFeeRateReply.ProtoReflect.Descriptor instead.
func (*GetTxFeeRateReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{57}
}

func (x *GetTxFeeRateReply) GetTxFeeRateInfo() *TxFeeRateInfo {
	if x != nil {
		return x.TxFeeRateInfo
	}
	return nil
}

type SetTxFeeRatePreferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxFeeRatePreference uint64 `protobuf:"varint,1,opt,name=txFeeRatePreference,proto3" json:"txFeeRatePreference,omitempty"`
}

func (x *SetTxFeeRatePreferenceRequest) Reset() {
	*x = SetTxFeeRatePreferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTxFeeRatePreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTxFeeRatePreferenceRequest) ProtoMessage() {}

func (x *SetTxFeeRatePreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTxFeeRatePreferenceRequest.ProtoReflect.Descriptor instead.
func (*SetTxFeeRatePreferenceRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{58}
}

func (x *SetTxFeeRatePreferenceRequest) GetTxFeeRatePreference() uint64 {
	if x != nil {
		return x.TxFeeRatePreference
	}
	return 0
}

type SetTxFeeRatePreferenceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxFeeRateInfo *TxFeeRateInfo `protobuf:"bytes,1,opt,name=txFeeRateInfo,proto3" json:"txFeeRateInfo,omitempty"`
}

func (x *SetTxFeeRatePreferenceReply) Reset() {
	*x = SetTxFeeRatePreferenceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTxFeeRatePreferenceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTxFeeRatePreferenceReply) ProtoMessage() {}

func (x *SetTxFeeRatePreferenceReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTxFeeRatePreferenceReply.ProtoReflect.Descriptor instead.
func (*SetTxFeeRatePreferenceReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{59}
}

func (x *SetTxFeeRatePreferenceReply) GetTxFeeRateInfo() *TxFeeRateInfo {
	if x != nil {
		return x.TxFeeRateInfo
	}
	return nil
}

type UnsetTxFeeRatePreferenceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsetTxFeeRatePreferenceRequest) Reset() {
	*x = UnsetTxFeeRatePreferenceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetTxFeeRatePreferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetTxFeeRatePreferenceRequest) ProtoMessage() {}

func (x *UnsetTxFeeRatePreferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetTxFeeRatePreferenceRequest.ProtoReflect.Descriptor instead.
func (*UnsetTxFeeRatePreferenceRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{60}
}

type UnsetTxFeeRatePreferenceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxFeeRateInfo *TxFeeRateInfo `protobuf:"bytes,1,opt,name=txFeeRateInfo,proto3" json:"txFeeRateInfo,omitempty"`
}

func (x *UnsetTxFeeRatePreferenceReply) Reset() {
	*x = UnsetTxFeeRatePreferenceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsetTxFeeRatePreferenceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsetTxFeeRatePreferenceReply) ProtoMessage() {}

func (x *UnsetTxFeeRatePreferenceReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsetTxFeeRatePreferenceReply.ProtoReflect.Descriptor instead.
func (*UnsetTxFeeRatePreferenceReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{61}
}

func (x *UnsetTxFeeRatePreferenceReply) GetTxFeeRateInfo() *TxFeeRateInfo {
	if x != nil {
		return x.TxFeeRateInfo
	}
	return nil
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=txId,proto3" json:"txId,omitempty"`
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{62}
}

func (x *GetTransactionRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type GetTransactionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxInfo *TxInfo `protobuf:"bytes,1,opt,name=txInfo,proto3" json:"txInfo,omitempty"`
}

func (x *GetTransactionReply) Reset() {
	*x = GetTransactionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionReply) ProtoMessage() {}

func (x *GetTransactionReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionReply.ProtoReflect.Descriptor instead.
func (*GetTransactionReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{63}
}

func (x *GetTransactionReply) GetTxInfo() *TxInfo {
	if x != nil {
		return x.TxInfo
	}
	return nil
}

type GetFundingAddressesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetFundingAddressesRequest) Reset() {
	*x = GetFundingAddressesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundingAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundingAddressesRequest) ProtoMessage() {}

func (x *GetFundingAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundingAddressesRequest.ProtoReflect.Descriptor instead.
func (*GetFundingAddressesRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{64}
}

type GetFundingAddressesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressBalanceInfo []*AddressBalanceInfo `protobuf:"bytes,1,rep,name=addressBalanceInfo,proto3" json:"addressBalanceInfo,omitempty"`
}

func (x *GetFundingAddressesReply) Reset() {
	*x = GetFundingAddressesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundingAddressesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundingAddressesReply) ProtoMessage() {}

func (x *GetFundingAddressesReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundingAddressesReply.ProtoReflect.Descriptor instead.
func (*GetFundingAddressesReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{65}
}

func (x *GetFundingAddressesReply) GetAddressBalanceInfo() []*AddressBalanceInfo {
	if x != nil {
		return x.AddressBalanceInfo
	}
	return nil
}

type SetWalletPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password    string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	NewPassword string `protobuf:"bytes,2,opt,name=newPassword,proto3" json:"newPassword,omitempty"`
}

func (x *SetWalletPasswordRequest) Reset() {
	*x = SetWalletPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWalletPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWalletPasswordRequest) ProtoMessage() {}

func (x *SetWalletPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWalletPasswordRequest.ProtoReflect.Descriptor instead.
func (*SetWalletPasswordRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{66}
}

func (x *SetWalletPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetWalletPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type SetWalletPasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetWalletPasswordReply) Reset() {
	*x = SetWalletPasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetWalletPasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetWalletPasswordReply) ProtoMessage() {}

func (x *SetWalletPasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetWalletPasswordReply.ProtoReflect.Descriptor instead.
func (*SetWalletPasswordReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{67}
}

type RemoveWalletPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RemoveWalletPasswordRequest) Reset() {
	*x = RemoveWalletPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWalletPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWalletPasswordRequest) ProtoMessage() {}

func (x *RemoveWalletPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWalletPasswordRequest.ProtoReflect.Descriptor instead.
func (*RemoveWalletPasswordRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{68}
}

func (x *RemoveWalletPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RemoveWalletPasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveWalletPasswordReply) Reset() {
	*x = RemoveWalletPasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveWalletPasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveWalletPasswordReply) ProtoMessage() {}

func (x *RemoveWalletPasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveWalletPasswordReply.ProtoReflect.Descriptor instead.
func (*RemoveWalletPasswordReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{69}
}

type LockWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockWalletRequest) Reset() {
	*x = LockWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletRequest) ProtoMessage() {}

func (x *LockWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletRequest.ProtoReflect.Descriptor instead.
func (*LockWalletRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{70}
}

type LockWalletReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockWalletReply) Reset() {
	*x = LockWalletReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockWalletReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockWalletReply) ProtoMessage() {}

func (x *LockWalletReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockWalletReply.ProtoReflect.Descriptor instead.
func (*LockWalletReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{71}
}

type UnlockWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Timeout  uint64 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *UnlockWalletRequest) Reset() {
	*x = UnlockWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletRequest) ProtoMessage() {}

func (x *UnlockWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletRequest.ProtoReflect.Descriptor instead.
func (*UnlockWalletRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{72}
}

func (x *UnlockWalletRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UnlockWalletRequest) GetTimeout() uint64 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type UnlockWalletReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockWalletReply) Reset() {
	*x = UnlockWalletReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockWalletReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockWalletReply) ProtoMessage() {}

func (x *UnlockWalletReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockWalletReply.ProtoReflect.Descriptor instead.
func (*UnlockWalletReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{73}
}

type BalancesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Field names are shortened for readability's sake, i.e.,
	// balancesInfo.getBtc().getAvailableBalance() is cleaner than
	// balancesInfo.getBtcBalanceInfo().getAvailableBalance().
	Bsq *BsqBalanceInfo `protobuf:"bytes,1,opt,name=bsq,proto3" json:"bsq,omitempty"`
	Btc *BtcBalanceInfo `protobuf:"bytes,2,opt,name=btc,proto3" json:"btc,omitempty"`
}

func (x *BalancesInfo) Reset() {
	*x = BalancesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalancesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalancesInfo) ProtoMessage() {}

func (x *BalancesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalancesInfo.ProtoReflect.Descriptor instead.
func (*BalancesInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{74}
}

func (x *BalancesInfo) GetBsq() *BsqBalanceInfo {
	if x != nil {
		return x.Bsq
	}
	return nil
}

func (x *BalancesInfo) GetBtc() *BtcBalanceInfo {
	if x != nil {
		return x.Btc
	}
	return nil
}

type BsqBalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableConfirmedBalance uint64 `protobuf:"varint,1,opt,name=availableConfirmedBalance,proto3" json:"availableConfirmedBalance,omitempty"`
	UnverifiedBalance         uint64 `protobuf:"varint,2,opt,name=unverifiedBalance,proto3" json:"unverifiedBalance,omitempty"`
	UnconfirmedChangeBalance  uint64 `protobuf:"varint,3,opt,name=unconfirmedChangeBalance,proto3" json:"unconfirmedChangeBalance,omitempty"`
	LockedForVotingBalance    uint64 `protobuf:"varint,4,opt,name=lockedForVotingBalance,proto3" json:"lockedForVotingBalance,omitempty"`
	LockupBondsBalance        uint64 `protobuf:"varint,5,opt,name=lockupBondsBalance,proto3" json:"lockupBondsBalance,omitempty"`
	UnlockingBondsBalance     uint64 `protobuf:"varint,6,opt,name=unlockingBondsBalance,proto3" json:"unlockingBondsBalance,omitempty"`
}

func (x *BsqBalanceInfo) Reset() {
	*x = BsqBalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BsqBalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BsqBalanceInfo) ProtoMessage() {}

func (x *BsqBalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BsqBalanceInfo.ProtoReflect.Descriptor instead.
func (*BsqBalanceInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{75}
}

func (x *BsqBalanceInfo) GetAvailableConfirmedBalance() uint64 {
	if x != nil {
		return x.AvailableConfirmedBalance
	}
	return 0
}

func (x *BsqBalanceInfo) GetUnverifiedBalance() uint64 {
	if x != nil {
		return x.UnverifiedBalance
	}
	return 0
}

func (x *BsqBalanceInfo) GetUnconfirmedChangeBalance() uint64 {
	if x != nil {
		return x.UnconfirmedChangeBalance
	}
	return 0
}

func (x *BsqBalanceInfo) GetLockedForVotingBalance() uint64 {
	if x != nil {
		return x.LockedForVotingBalance
	}
	return 0
}

func (x *BsqBalanceInfo) GetLockupBondsBalance() uint64 {
	if x != nil {
		return x.LockupBondsBalance
	}
	return 0
}

func (x *BsqBalanceInfo) GetUnlockingBondsBalance() uint64 {
	if x != nil {
		return x.UnlockingBondsBalance
	}
	return 0
}

type BtcBalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableBalance      uint64 `protobuf:"varint,1,opt,name=availableBalance,proto3" json:"availableBalance,omitempty"`
	ReservedBalance       uint64 `protobuf:"varint,2,opt,name=reservedBalance,proto3" json:"reservedBalance,omitempty"`
	TotalAvailableBalance uint64 `protobuf:"varint,3,opt,name=totalAvailableBalance,proto3" json:"totalAvailableBalance,omitempty"`
	LockedBalance         uint64 `protobuf:"varint,4,opt,name=lockedBalance,proto3" json:"lockedBalance,omitempty"`
}

func (x *BtcBalanceInfo) Reset() {
	*x = BtcBalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BtcBalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BtcBalanceInfo) ProtoMessage() {}

func (x *BtcBalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BtcBalanceInfo.ProtoReflect.Descriptor instead.
func (*BtcBalanceInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{76}
}

func (x *BtcBalanceInfo) GetAvailableBalance() uint64 {
	if x != nil {
		return x.AvailableBalance
	}
	return 0
}

func (x *BtcBalanceInfo) GetReservedBalance() uint64 {
	if x != nil {
		return x.ReservedBalance
	}
	return 0
}

func (x *BtcBalanceInfo) GetTotalAvailableBalance() uint64 {
	if x != nil {
		return x.TotalAvailableBalance
	}
	return 0
}

func (x *BtcBalanceInfo) GetLockedBalance() uint64 {
	if x != nil {
		return x.LockedBalance
	}
	return 0
}

type AddressBalanceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance          int64  `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
	NumConfirmations int64  `protobuf:"varint,3,opt,name=numConfirmations,proto3" json:"numConfirmations,omitempty"`
}

func (x *AddressBalanceInfo) Reset() {
	*x = AddressBalanceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressBalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressBalanceInfo) ProtoMessage() {}

func (x *AddressBalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressBalanceInfo.ProtoReflect.Descriptor instead.
func (*AddressBalanceInfo) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{77}
}

func (x *AddressBalanceInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddressBalanceInfo) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *AddressBalanceInfo) GetNumConfirmations() int64 {
	if x != nil {
		return x.NumConfirmations
	}
	return 0
}

type GetVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{78}
}

type GetVersionReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetVersionReply) Reset() {
	*x = GetVersionReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionReply) ProtoMessage() {}

func (x *GetVersionReply) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionReply.ProtoReflect.Descriptor instead.
func (*GetVersionReply) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{79}
}

func (x *GetVersionReply) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

var File_grpc_proto protoreflect.FileDescriptor

var file_grpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x1a, 0x08, 0x70, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x1b, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x69,
	0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x22, 0x1b, 0x0a, 0x19, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70,
	0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x34, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a,
	0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x36, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x22, 0xba, 0x03, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x14, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x22, 0x24,
	0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc5, 0x05, 0x0a, 0x09, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x73,
	0x65, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x75, 0x73, 0x65, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x42, 0x61, 0x73, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6d, 0x69, 0x6e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x62, 0x75, 0x79, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x62, 0x75, 0x79, 0x65, 0x72, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x3a,
	0x0a, 0x18, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x6f, 0x72, 0x4d,
	0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x74, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x6f, 0x72, 0x4d,
	0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x74, 0x63, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x65,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x22, 0x4d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x22,
	0x68, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4d, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x64, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x22, 0x48, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d,
	0x4a, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x4a, 0x73,
	0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x12, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x10,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4f,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x33, 0x52, 0x0f,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22,
	0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0b,
	0x0a, 0x09, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8c, 0x01, 0x0a, 0x10,
	0x54, 0x61, 0x6b, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x46,
	0x65, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x46, 0x0a, 0x0e, 0x54, 0x61,
	0x6b, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34, 0x0a, 0x05,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x1c, 0x0a, 0x1a,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x1d, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x74, 0x72, 0x61, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x4b, 0x65, 0x65, 0x70, 0x46, 0x75,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5e, 0x0a, 0x14, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x87,
	0x07, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3a,
	0x0a, 0x18, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x6f, 0x72, 0x54,
	0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x74, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x18, 0x69, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x46, 0x6f, 0x72, 0x54,
	0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x42, 0x74, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x78,
	0x46, 0x65, 0x65, 0x41, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x74, 0x78, 0x46, 0x65, 0x65, 0x41, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x41, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x41, 0x73,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65,
	0x54, 0x78, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x6b, 0x65,
	0x72, 0x46, 0x65, 0x65, 0x54, 0x78, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x54, 0x78, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x54, 0x78, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x72, 0x61, 0x64, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x65, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x64, 0x65, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x69,
	0x61, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x69, 0x61, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x69, 0x73, 0x46, 0x69,
	0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x73, 0x46, 0x69, 0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x6e,
	0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x73, 0x4a, 0x73,
	0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x41, 0x73, 0x4a, 0x73, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x0d, 0x54, 0x78, 0x46,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x75, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x78, 0x46, 0x65, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x66, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x65,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x17,
	0x6c, 0x61, 0x73, 0x74, 0x46, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x6c,
	0x61, 0x73, 0x74, 0x46, 0x65, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x06, 0x54, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x75,
	0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x53, 0x75, 0x6d, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x38, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x51, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x08, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x71, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1c, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x42, 0x73, 0x71, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x42, 0x73, 0x71, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x60, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x73, 0x71, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x22, 0x43, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x73, 0x71, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x74, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x74, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64,
	0x42, 0x74, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x22, 0x43,
	0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x74, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33,
	0x0a, 0x06, 0x74, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x48, 0x0a, 0x0d, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x46,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x74, 0x78, 0x46, 0x65,
	0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a, 0x1d, 0x53, 0x65, 0x74,
	0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x78,
	0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x67, 0x0a, 0x1b,
	0x53, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x74,
	0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x21, 0x0a, 0x1f, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x78,
	0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x69, 0x0a, 0x1d, 0x55, 0x6e, 0x73, 0x65,
	0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0d, 0x74, 0x78, 0x46,
	0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x74, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64,
	0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x06, 0x74, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x78,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x74, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1c, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x57, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x58, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x53, 0x65, 0x74,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x39, 0x0a, 0x1b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x0a, 0x11, 0x4c,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x11, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x4b, 0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x7c, 0x0a, 0x0c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x03, 0x62, 0x73, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x42, 0x73, 0x71, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x62, 0x73, 0x71, 0x12, 0x35, 0x0a, 0x03,
	0x62, 0x74, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x62,
	0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x42, 0x74, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03,
	0x62, 0x74, 0x63, 0x22, 0xd6, 0x02, 0x0a, 0x0e, 0x42, 0x73, 0x71, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x11, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x75, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65,
	0x64, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x74, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x42, 0x6f, 0x6e, 0x64, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xc2, 0x01, 0x0a,
	0x0e, 0x42, 0x74, 0x63, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x22, 0x74, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6e,
	0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x32, 0x8b, 0x01, 0x0a, 0x0d, 0x44, 0x69,
	0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x7a, 0x0a, 0x14, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x44, 0x69, 0x73, 0x70, 0x75, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x6d, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x12,
	0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70,
	0x12, 0x29, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x48, 0x65, 0x6c, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x65, 0x6c, 0x70, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xbc, 0x04, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x12, 0x56, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x24, 0x2e,
	0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x26, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72,
	0x73, 0x12, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x12, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xf5, 0x03, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x7a, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x74, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x7d,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x31, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x6b, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69,
	0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x8a, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x12, 0x74, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x2e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73,
	0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x5c, 0x0a, 0x0e, 0x53, 0x68, 0x75, 0x74, 0x64,
	0x6f, 0x77, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x20, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0xff, 0x04, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73,
	0x12, 0x56, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x24, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x09, 0x54, 0x61, 0x6b, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x7d, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x31, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x80, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x32, 0x2e,
	0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x09, 0x4b, 0x65, 0x65, 0x70, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x25, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x62,
	0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x4b, 0x65, 0x65, 0x70, 0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x0d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e, 0x64,
	0x73, 0x12, 0x29, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x46, 0x75, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x84, 0x0c, 0x0a, 0x07, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x27, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x62,
	0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69,
	0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x6e,
	0x75, 0x73, 0x65, 0x64, 0x42, 0x73, 0x71, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f,
	0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x42, 0x73,
	0x71, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x42,
	0x73, 0x71, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x73, 0x71, 0x12, 0x23, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x73, 0x71, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x73, 0x71, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x74, 0x63,
	0x12, 0x23, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x74, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x42, 0x74, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x80,
	0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x2e, 0x69, 0x6f, 0x2e, 0x62,
	0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e,
	0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x86, 0x01, 0x0a, 0x18, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65,
	0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34,
	0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x73, 0x65, 0x74, 0x54, 0x78, 0x46, 0x65, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x73, 0x65, 0x74,
	0x54, 0x78, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69,
	0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x2f, 0x2e, 0x69, 0x6f,
	0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69,
	0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x71, 0x0a,
	0x11, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x2d, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x7a, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69,
	0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0a,
	0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x26, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0c, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x6a,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5c, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x69, 0x6f, 0x2e,
	0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x69, 0x6f, 0x2e, 0x62, 0x69, 0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x1e, 0x0a, 0x0f, 0x62, 0x69,
	0x73, 0x71, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x50, 0x01, 0x5a,
	0x09, 0x2e, 0x3b, 0x62, 0x69, 0x73, 0x71, 0x75, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData = file_grpc_proto_rawDesc
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_rawDescData)
	})
	return file_grpc_proto_rawDescData
}

var file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 80)
var file_grpc_proto_goTypes = []interface{}{
	(*RegisterDisputeAgentRequest)(nil),     // 0: io.bisq.protobuffer.RegisterDisputeAgentRequest
	(*RegisterDisputeAgentReply)(nil),       // 1: io.bisq.protobuffer.RegisterDisputeAgentReply
	(*GetMethodHelpRequest)(nil),            // 2: io.bisq.protobuffer.GetMethodHelpRequest
	(*GetMethodHelpReply)(nil),              // 3: io.bisq.protobuffer.GetMethodHelpReply
	(*GetOfferRequest)(nil),                 // 4: io.bisq.protobuffer.GetOfferRequest
	(*GetOfferReply)(nil),                   // 5: io.bisq.protobuffer.GetOfferReply
	(*GetMyOfferRequest)(nil),               // 6: io.bisq.protobuffer.GetMyOfferRequest
	(*GetMyOfferReply)(nil),                 // 7: io.bisq.protobuffer.GetMyOfferReply
	(*GetOffersRequest)(nil),                // 8: io.bisq.protobuffer.GetOffersRequest
	(*GetOffersReply)(nil),                  // 9: io.bisq.protobuffer.GetOffersReply
	(*GetMyOffersRequest)(nil),              // 10: io.bisq.protobuffer.GetMyOffersRequest
	(*GetMyOffersReply)(nil),                // 11: io.bisq.protobuffer.GetMyOffersReply
	(*CreateOfferRequest)(nil),              // 12: io.bisq.protobuffer.CreateOfferRequest
	(*CreateOfferReply)(nil),                // 13: io.bisq.protobuffer.CreateOfferReply
	(*CancelOfferRequest)(nil),              // 14: io.bisq.protobuffer.CancelOfferRequest
	(*CancelOfferReply)(nil),                // 15: io.bisq.protobuffer.CancelOfferReply
	(*OfferInfo)(nil),                       // 16: io.bisq.protobuffer.OfferInfo
	(*CreatePaymentAccountRequest)(nil),     // 17: io.bisq.protobuffer.CreatePaymentAccountRequest
	(*CreatePaymentAccountReply)(nil),       // 18: io.bisq.protobuffer.CreatePaymentAccountReply
	(*GetPaymentAccountsRequest)(nil),       // 19: io.bisq.protobuffer.GetPaymentAccountsRequest
	(*GetPaymentAccountsReply)(nil),         // 20: io.bisq.protobuffer.GetPaymentAccountsReply
	(*GetPaymentMethodsRequest)(nil),        // 21: io.bisq.protobuffer.GetPaymentMethodsRequest
	(*GetPaymentMethodsReply)(nil),          // 22: io.bisq.protobuffer.GetPaymentMethodsReply
	(*GetPaymentAccountFormRequest)(nil),    // 23: io.bisq.protobuffer.GetPaymentAccountFormRequest
	(*GetPaymentAccountFormReply)(nil),      // 24: io.bisq.protobuffer.GetPaymentAccountFormReply
	(*MarketPriceRequest)(nil),              // 25: io.bisq.protobuffer.MarketPriceRequest
	(*MarketPriceReply)(nil),                // 26: io.bisq.protobuffer.MarketPriceReply
	(*GetTradeStatisticsRequest)(nil),       // 27: io.bisq.protobuffer.GetTradeStatisticsRequest
	(*GetTradeStatisticsReply)(nil),         // 28: io.bisq.protobuffer.GetTradeStatisticsReply
	(*StopRequest)(nil),                     // 29: io.bisq.protobuffer.StopRequest
	(*StopReply)(nil),                       // 30: io.bisq.protobuffer.StopReply
	(*TakeOfferRequest)(nil),                // 31: io.bisq.protobuffer.TakeOfferRequest
	(*TakeOfferReply)(nil),                  // 32: io.bisq.protobuffer.TakeOfferReply
	(*ConfirmPaymentStartedRequest)(nil),    // 33: io.bisq.protobuffer.ConfirmPaymentStartedRequest
	(*ConfirmPaymentStartedReply)(nil),      // 34: io.bisq.protobuffer.ConfirmPaymentStartedReply
	(*ConfirmPaymentReceivedRequest)(nil),   // 35: io.bisq.protobuffer.ConfirmPaymentReceivedRequest
	(*ConfirmPaymentReceivedReply)(nil),     // 36: io.bisq.protobuffer.ConfirmPaymentReceivedReply
	(*GetTradeRequest)(nil),                 // 37: io.bisq.protobuffer.GetTradeRequest
	(*GetTradeReply)(nil),                   // 38: io.bisq.protobuffer.GetTradeReply
	(*KeepFundsRequest)(nil),                // 39: io.bisq.protobuffer.KeepFundsRequest
	(*KeepFundsReply)(nil),                  // 40: io.bisq.protobuffer.KeepFundsReply
	(*WithdrawFundsRequest)(nil),            // 41: io.bisq.protobuffer.WithdrawFundsRequest
	(*WithdrawFundsReply)(nil),              // 42: io.bisq.protobuffer.WithdrawFundsReply
	(*TradeInfo)(nil),                       // 43: io.bisq.protobuffer.TradeInfo
	(*TxFeeRateInfo)(nil),                   // 44: io.bisq.protobuffer.TxFeeRateInfo
	(*TxInfo)(nil),                          // 45: io.bisq.protobuffer.TxInfo
	(*GetBalancesRequest)(nil),              // 46: io.bisq.protobuffer.GetBalancesRequest
	(*GetBalancesReply)(nil),                // 47: io.bisq.protobuffer.GetBalancesReply
	(*GetAddressBalanceRequest)(nil),        // 48: io.bisq.protobuffer.GetAddressBalanceRequest
	(*GetAddressBalanceReply)(nil),          // 49: io.bisq.protobuffer.GetAddressBalanceReply
	(*GetUnusedBsqAddressRequest)(nil),      // 50: io.bisq.protobuffer.GetUnusedBsqAddressRequest
	(*GetUnusedBsqAddressReply)(nil),        // 51: io.bisq.protobuffer.GetUnusedBsqAddressReply
	(*SendBsqRequest)(nil),                  // 52: io.bisq.protobuffer.SendBsqRequest
	(*SendBsqReply)(nil),                    // 53: io.bisq.protobuffer.SendBsqReply
	(*SendBtcRequest)(nil),                  // 54: io.bisq.protobuffer.SendBtcRequest
	(*SendBtcReply)(nil),                    // 55: io.bisq.protobuffer.SendBtcReply
	(*GetTxFeeRateRequest)(nil),             // 56: io.bisq.protobuffer.GetTxFeeRateRequest
	(*GetTxFeeRateReply)(nil),               // 57: io.bisq.protobuffer.GetTxFeeRateReply
	(*SetTxFeeRatePreferenceRequest)(nil),   // 58: io.bisq.protobuffer.SetTxFeeRatePreferenceRequest
	(*SetTxFeeRatePreferenceReply)(nil),     // 59: io.bisq.protobuffer.SetTxFeeRatePreferenceReply
	(*UnsetTxFeeRatePreferenceRequest)(nil), // 60: io.bisq.protobuffer.UnsetTxFeeRatePreferenceRequest
	(*UnsetTxFeeRatePreferenceReply)(nil),   // 61: io.bisq.protobuffer.UnsetTxFeeRatePreferenceReply
	(*GetTransactionRequest)(nil),           // 62: io.bisq.protobuffer.GetTransactionRequest
	(*GetTransactionReply)(nil),             // 63: io.bisq.protobuffer.GetTransactionReply
	(*GetFundingAddressesRequest)(nil),      // 64: io.bisq.protobuffer.GetFundingAddressesRequest
	(*GetFundingAddressesReply)(nil),        // 65: io.bisq.protobuffer.GetFundingAddressesReply
	(*SetWalletPasswordRequest)(nil),        // 66: io.bisq.protobuffer.SetWalletPasswordRequest
	(*SetWalletPasswordReply)(nil),          // 67: io.bisq.protobuffer.SetWalletPasswordReply
	(*RemoveWalletPasswordRequest)(nil),     // 68: io.bisq.protobuffer.RemoveWalletPasswordRequest
	(*RemoveWalletPasswordReply)(nil),       // 69: io.bisq.protobuffer.RemoveWalletPasswordReply
	(*LockWalletRequest)(nil),               // 70: io.bisq.protobuffer.LockWalletRequest
	(*LockWalletReply)(nil),                 // 71: io.bisq.protobuffer.LockWalletReply
	(*UnlockWalletRequest)(nil),             // 72: io.bisq.protobuffer.UnlockWalletRequest
	(*UnlockWalletReply)(nil),               // 73: io.bisq.protobuffer.UnlockWalletReply
	(*BalancesInfo)(nil),                    // 74: io.bisq.protobuffer.BalancesInfo
	(*BsqBalanceInfo)(nil),                  // 75: io.bisq.protobuffer.BsqBalanceInfo
	(*BtcBalanceInfo)(nil),                  // 76: io.bisq.protobuffer.BtcBalanceInfo
	(*AddressBalanceInfo)(nil),              // 77: io.bisq.protobuffer.AddressBalanceInfo
	(*GetVersionRequest)(nil),               // 78: io.bisq.protobuffer.GetVersionRequest
	(*GetVersionReply)(nil),                 // 79: io.bisq.protobuffer.GetVersionReply
	(*PaymentAccount)(nil),                  // 80: io.bisq.protobuffer.PaymentAccount
	(*PaymentMethod)(nil),                   // 81: io.bisq.protobuffer.PaymentMethod
	(*TradeStatistics3)(nil),                // 82: io.bisq.protobuffer.TradeStatistics3
}
var file_grpc_proto_depIdxs = []int32{
	16, // 0: io.bisq.protobuffer.GetOfferReply.offer:type_name -> io.bisq.protobuffer.OfferInfo
	16, // 1: io.bisq.protobuffer.GetMyOfferReply.offer:type_name -> io.bisq.protobuffer.OfferInfo
	16, // 2: io.bisq.protobuffer.GetOffersReply.offers:type_name -> io.bisq.protobuffer.OfferInfo
	16, // 3: io.bisq.protobuffer.GetMyOffersReply.offers:type_name -> io.bisq.protobuffer.OfferInfo
	16, // 4: io.bisq.protobuffer.CreateOfferReply.offer:type_name -> io.bisq.protobuffer.OfferInfo
	80, // 5: io.bisq.protobuffer.CreatePaymentAccountReply.paymentAccount:type_name -> io.bisq.protobuffer.PaymentAccount
	80, // 6: io.bisq.protobuffer.GetPaymentAccountsReply.paymentAccounts:type_name -> io.bisq.protobuffer.PaymentAccount
	81, // 7: io.bisq.protobuffer.GetPaymentMethodsReply.paymentMethods:type_name -> io.bisq.protobuffer.PaymentMethod
	82, // 8: io.bisq.protobuffer.GetTradeStatisticsReply.TradeStatistics:type_name -> io.bisq.protobuffer.TradeStatistics3
	43, // 9: io.bisq.protobuffer.TakeOfferReply.trade:type_name -> io.bisq.protobuffer.TradeInfo
	43, // 10: io.bisq.protobuffer.GetTradeReply.trade:type_name -> io.bisq.protobuffer.TradeInfo
	16, // 11: io.bisq.protobuffer.TradeInfo.offer:type_name -> io.bisq.protobuffer.OfferInfo
	74, // 12: io.bisq.protobuffer.GetBalancesReply.balances:type_name -> io.bisq.protobuffer.BalancesInfo
	77, // 13: io.bisq.protobuffer.GetAddressBalanceReply.addressBalanceInfo:type_name -> io.bisq.protobuffer.AddressBalanceInfo
	45, // 14: io.bisq.protobuffer.SendBsqReply.txInfo:type_name -> io.bisq.protobuffer.TxInfo
	45, // 15: io.bisq.protobuffer.SendBtcReply.txInfo:type_name -> io.bisq.protobuffer.TxInfo
	44, // 16: io.bisq.protobuffer.GetTxFeeRateReply.txFeeRateInfo:type_name -> io.bisq.protobuffer.TxFeeRateInfo
	44, // 17: io.bisq.protobuffer.SetTxFeeRatePreferenceReply.txFeeRateInfo:type_name -> io.bisq.protobuffer.TxFeeRateInfo
	44, // 18: io.bisq.protobuffer.UnsetTxFeeRatePreferenceReply.txFeeRateInfo:type_name -> io.bisq.protobuffer.TxFeeRateInfo
	45, // 19: io.bisq.protobuffer.GetTransactionReply.txInfo:type_name -> io.bisq.protobuffer.TxInfo
	77, // 20: io.bisq.protobuffer.GetFundingAddressesReply.addressBalanceInfo:type_name -> io.bisq.protobuffer.AddressBalanceInfo
	75, // 21: io.bisq.protobuffer.BalancesInfo.bsq:type_name -> io.bisq.protobuffer.BsqBalanceInfo
	76, // 22: io.bisq.protobuffer.BalancesInfo.btc:type_name -> io.bisq.protobuffer.BtcBalanceInfo
	0,  // 23: io.bisq.protobuffer.DisputeAgents.RegisterDisputeAgent:input_type -> io.bisq.protobuffer.RegisterDisputeAgentRequest
	2,  // 24: io.bisq.protobuffer.Help.GetMethodHelp:input_type -> io.bisq.protobuffer.GetMethodHelpRequest
	4,  // 25: io.bisq.protobuffer.Offers.GetOffer:input_type -> io.bisq.protobuffer.GetOfferRequest
	6,  // 26: io.bisq.protobuffer.Offers.GetMyOffer:input_type -> io.bisq.protobuffer.GetMyOfferRequest
	8,  // 27: io.bisq.protobuffer.Offers.GetOffers:input_type -> io.bisq.protobuffer.GetOffersRequest
	10, // 28: io.bisq.protobuffer.Offers.GetMyOffers:input_type -> io.bisq.protobuffer.GetMyOffersRequest
	12, // 29: io.bisq.protobuffer.Offers.CreateOffer:input_type -> io.bisq.protobuffer.CreateOfferRequest
	14, // 30: io.bisq.protobuffer.Offers.CancelOffer:input_type -> io.bisq.protobuffer.CancelOfferRequest
	17, // 31: io.bisq.protobuffer.PaymentAccounts.CreatePaymentAccount:input_type -> io.bisq.protobuffer.CreatePaymentAccountRequest
	19, // 32: io.bisq.protobuffer.PaymentAccounts.GetPaymentAccounts:input_type -> io.bisq.protobuffer.GetPaymentAccountsRequest
	21, // 33: io.bisq.protobuffer.PaymentAccounts.GetPaymentMethods:input_type -> io.bisq.protobuffer.GetPaymentMethodsRequest
	23, // 34: io.bisq.protobuffer.PaymentAccounts.GetPaymentAccountForm:input_type -> io.bisq.protobuffer.GetPaymentAccountFormRequest
	25, // 35: io.bisq.protobuffer.Price.GetMarketPrice:input_type -> io.bisq.protobuffer.MarketPriceRequest
	27, // 36: io.bisq.protobuffer.GetTradeStatistics.GetTradeStatistics:input_type -> io.bisq.protobuffer.GetTradeStatisticsRequest
	29, // 37: io.bisq.protobuffer.ShutdownServer.Stop:input_type -> io.bisq.protobuffer.StopRequest
	37, // 38: io.bisq.protobuffer.Trades.GetTrade:input_type -> io.bisq.protobuffer.GetTradeRequest
	31, // 39: io.bisq.protobuffer.Trades.TakeOffer:input_type -> io.bisq.protobuffer.TakeOfferRequest
	33, // 40: io.bisq.protobuffer.Trades.ConfirmPaymentStarted:input_type -> io.bisq.protobuffer.ConfirmPaymentStartedRequest
	35, // 41: io.bisq.protobuffer.Trades.ConfirmPaymentReceived:input_type -> io.bisq.protobuffer.ConfirmPaymentReceivedRequest
	39, // 42: io.bisq.protobuffer.Trades.KeepFunds:input_type -> io.bisq.protobuffer.KeepFundsRequest
	41, // 43: io.bisq.protobuffer.Trades.WithdrawFunds:input_type -> io.bisq.protobuffer.WithdrawFundsRequest
	46, // 44: io.bisq.protobuffer.Wallets.GetBalances:input_type -> io.bisq.protobuffer.GetBalancesRequest
	48, // 45: io.bisq.protobuffer.Wallets.GetAddressBalance:input_type -> io.bisq.protobuffer.GetAddressBalanceRequest
	50, // 46: io.bisq.protobuffer.Wallets.GetUnusedBsqAddress:input_type -> io.bisq.protobuffer.GetUnusedBsqAddressRequest
	52, // 47: io.bisq.protobuffer.Wallets.SendBsq:input_type -> io.bisq.protobuffer.SendBsqRequest
	54, // 48: io.bisq.protobuffer.Wallets.SendBtc:input_type -> io.bisq.protobuffer.SendBtcRequest
	56, // 49: io.bisq.protobuffer.Wallets.GetTxFeeRate:input_type -> io.bisq.protobuffer.GetTxFeeRateRequest
	58, // 50: io.bisq.protobuffer.Wallets.SetTxFeeRatePreference:input_type -> io.bisq.protobuffer.SetTxFeeRatePreferenceRequest
	60, // 51: io.bisq.protobuffer.Wallets.UnsetTxFeeRatePreference:input_type -> io.bisq.protobuffer.UnsetTxFeeRatePreferenceRequest
	62, // 52: io.bisq.protobuffer.Wallets.GetTransaction:input_type -> io.bisq.protobuffer.GetTransactionRequest
	64, // 53: io.bisq.protobuffer.Wallets.GetFundingAddresses:input_type -> io.bisq.protobuffer.GetFundingAddressesRequest
	66, // 54: io.bisq.protobuffer.Wallets.SetWalletPassword:input_type -> io.bisq.protobuffer.SetWalletPasswordRequest
	68, // 55: io.bisq.protobuffer.Wallets.RemoveWalletPassword:input_type -> io.bisq.protobuffer.RemoveWalletPasswordRequest
	70, // 56: io.bisq.protobuffer.Wallets.LockWallet:input_type -> io.bisq.protobuffer.LockWalletRequest
	72, // 57: io.bisq.protobuffer.Wallets.UnlockWallet:input_type -> io.bisq.protobuffer.UnlockWalletRequest
	78, // 58: io.bisq.protobuffer.GetVersion.GetVersion:input_type -> io.bisq.protobuffer.GetVersionRequest
	1,  // 59: io.bisq.protobuffer.DisputeAgents.RegisterDisputeAgent:output_type -> io.bisq.protobuffer.RegisterDisputeAgentReply
	3,  // 60: io.bisq.protobuffer.Help.GetMethodHelp:output_type -> io.bisq.protobuffer.GetMethodHelpReply
	5,  // 61: io.bisq.protobuffer.Offers.GetOffer:output_type -> io.bisq.protobuffer.GetOfferReply
	7,  // 62: io.bisq.protobuffer.Offers.GetMyOffer:output_type -> io.bisq.protobuffer.GetMyOfferReply
	9,  // 63: io.bisq.protobuffer.Offers.GetOffers:output_type -> io.bisq.protobuffer.GetOffersReply
	11, // 64: io.bisq.protobuffer.Offers.GetMyOffers:output_type -> io.bisq.protobuffer.GetMyOffersReply
	13, // 65: io.bisq.protobuffer.Offers.CreateOffer:output_type -> io.bisq.protobuffer.CreateOfferReply
	15, // 66: io.bisq.protobuffer.Offers.CancelOffer:output_type -> io.bisq.protobuffer.CancelOfferReply
	18, // 67: io.bisq.protobuffer.PaymentAccounts.CreatePaymentAccount:output_type -> io.bisq.protobuffer.CreatePaymentAccountReply
	20, // 68: io.bisq.protobuffer.PaymentAccounts.GetPaymentAccounts:output_type -> io.bisq.protobuffer.GetPaymentAccountsReply
	22, // 69: io.bisq.protobuffer.PaymentAccounts.GetPaymentMethods:output_type -> io.bisq.protobuffer.GetPaymentMethodsReply
	24, // 70: io.bisq.protobuffer.PaymentAccounts.GetPaymentAccountForm:output_type -> io.bisq.protobuffer.GetPaymentAccountFormReply
	26, // 71: io.bisq.protobuffer.Price.GetMarketPrice:output_type -> io.bisq.protobuffer.MarketPriceReply
	28, // 72: io.bisq.protobuffer.GetTradeStatistics.GetTradeStatistics:output_type -> io.bisq.protobuffer.GetTradeStatisticsReply
	30, // 73: io.bisq.protobuffer.ShutdownServer.Stop:output_type -> io.bisq.protobuffer.StopReply
	38, // 74: io.bisq.protobuffer.Trades.GetTrade:output_type -> io.bisq.protobuffer.GetTradeReply
	32, // 75: io.bisq.protobuffer.Trades.TakeOffer:output_type -> io.bisq.protobuffer.TakeOfferReply
	34, // 76: io.bisq.protobuffer.Trades.ConfirmPaymentStarted:output_type -> io.bisq.protobuffer.ConfirmPaymentStartedReply
	36, // 77: io.bisq.protobuffer.Trades.ConfirmPaymentReceived:output_type -> io.bisq.protobuffer.ConfirmPaymentReceivedReply
	40, // 78: io.bisq.protobuffer.Trades.KeepFunds:output_type -> io.bisq.protobuffer.KeepFundsReply
	42, // 79: io.bisq.protobuffer.Trades.WithdrawFunds:output_type -> io.bisq.protobuffer.WithdrawFundsReply
	47, // 80: io.bisq.protobuffer.Wallets.GetBalances:output_type -> io.bisq.protobuffer.GetBalancesReply
	49, // 81: io.bisq.protobuffer.Wallets.GetAddressBalance:output_type -> io.bisq.protobuffer.GetAddressBalanceReply
	51, // 82: io.bisq.protobuffer.Wallets.GetUnusedBsqAddress:output_type -> io.bisq.protobuffer.GetUnusedBsqAddressReply
	53, // 83: io.bisq.protobuffer.Wallets.SendBsq:output_type -> io.bisq.protobuffer.SendBsqReply
	55, // 84: io.bisq.protobuffer.Wallets.SendBtc:output_type -> io.bisq.protobuffer.SendBtcReply
	57, // 85: io.bisq.protobuffer.Wallets.GetTxFeeRate:output_type -> io.bisq.protobuffer.GetTxFeeRateReply
	59, // 86: io.bisq.protobuffer.Wallets.SetTxFeeRatePreference:output_type -> io.bisq.protobuffer.SetTxFeeRatePreferenceReply
	61, // 87: io.bisq.protobuffer.Wallets.UnsetTxFeeRatePreference:output_type -> io.bisq.protobuffer.UnsetTxFeeRatePreferenceReply
	63, // 88: io.bisq.protobuffer.Wallets.GetTransaction:output_type -> io.bisq.protobuffer.GetTransactionReply
	65, // 89: io.bisq.protobuffer.Wallets.GetFundingAddresses:output_type -> io.bisq.protobuffer.GetFundingAddressesReply
	67, // 90: io.bisq.protobuffer.Wallets.SetWalletPassword:output_type -> io.bisq.protobuffer.SetWalletPasswordReply
	69, // 91: io.bisq.protobuffer.Wallets.RemoveWalletPassword:output_type -> io.bisq.protobuffer.RemoveWalletPasswordReply
	71, // 92: io.bisq.protobuffer.Wallets.LockWallet:output_type -> io.bisq.protobuffer.LockWalletReply
	73, // 93: io.bisq.protobuffer.Wallets.UnlockWallet:output_type -> io.bisq.protobuffer.UnlockWalletReply
	79, // 94: io.bisq.protobuffer.GetVersion.GetVersion:output_type -> io.bisq.protobuffer.GetVersionReply
	59, // [59:95] is the sub-list for method output_type
	23, // [23:59] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	file_pb_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDisputeAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterDisputeAgentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMethodHelpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMethodHelpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOfferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOfferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOffersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOffersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyOffersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOfferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelOfferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePaymentAccountReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentAccountsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentMethodsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentAccountFormRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentAccountFormReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketPriceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeStatisticsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeStatisticsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeOfferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TakeOfferReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPaymentStartedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPaymentStartedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPaymentReceivedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPaymentReceivedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTradeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepFundsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFundsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawFundsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxFeeRateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBalancesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAddressBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnusedBsqAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUnusedBsqAddressReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBsqRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBsqReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBtcRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBtcReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxFeeRateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxFeeRateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTxFeeRatePreferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTxFeeRatePreferenceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetTxFeeRatePreferenceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsetTxFeeRatePreferenceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundingAddressesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundingAddressesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWalletPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetWalletPasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWalletPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveWalletPasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockWalletReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockWalletReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalancesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BsqBalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BtcBalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressBalanceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   80,
			NumExtensions: 0,
			NumServices:   10,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_rawDesc = nil
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}
